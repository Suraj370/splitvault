// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String        @unique
  password      String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  mainAccounts  MainAccount[]
  refreshTokens RefreshToken[]
}

model MainAccount {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  userId       String       @db.ObjectId
  accountName  String
  balance      Float
  currency     String
  createdAt    DateTime     @default(now())
  user         User         @relation(fields: [userId], references: [id])
  subAccounts  SubAccount[]
}

model SubAccount {
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  mainAccountId   String       @db.ObjectId
  goalName        String
  allocatedAmount Float
  targetAmount    Float
  createdAt       DateTime     @default(now())
  mainAccount     MainAccount  @relation(fields: [mainAccountId], references: [id])
  transactions    Transaction[]
}

model Transaction {
  id           String          @id @default(auto()) @map("_id") @db.ObjectId
  subAccountId String          @db.ObjectId
  type         TransactionType
  amount       Float
  description  String?
  createdAt    DateTime        @default(now())
  subAccount   SubAccount      @relation(fields: [subAccountId], references: [id])
}

model RefreshToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String   @unique
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TransactionType {
  DEPOSIT
  WITHDRAWAL
  TRANSFER
}